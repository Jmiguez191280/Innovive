{"target_folder":"58418","files":[{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\assets\\services\\InnoviveItemQuantityPerBox.Service.ss","type":null,"contents":"\nfunction service(request, response)\n{\n\t'use strict';\n\ttry \n\t{\n\t\trequire('Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.ServiceController').handle(request, response);\n\t} \n\tcatch(ex)\n\t{\n\t\tconsole.log('Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.ServiceController ', ex);\n\t\tvar controller = require('ServiceController');\n\t\tcontroller.response = response;\n\t\tcontroller.request = request;\n\t\tcontroller.sendError(ex);\n\t}\n}"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\manifest.json","type":"application/json","contents":"{\n    \"name\": \"InnoviveItemQuantityPerBox\",\n    \"fantasyName\": \"Innovive Item Quantity Per Box\",\n    \"vendor\": \"Devma\",\n    \"type\": \"extension\",\n    \"target\": \"SCA,SCS\",\n    \"target_version\": {\n        \"SCA\": \">=20.1.0\",\n        \"SCS\": \">=20.1.0\"\n    },\n    \"version\": \"1.0.0\",\n    \"description\": \"This extension updates the selected quantity of the item per box.\",\n    \"assets\": {\n        \"img\": {\n            \"files\": []\n        },\n        \"fonts\": {\n            \"files\": []\n        },\n        \"services\": {\n            \"files\": [\n                \"services/InnoviveItemQuantityPerBox.Service.ss\"\n            ]\n        }\n    },\n    \"configuration\": {\n        \"files\": [\n            \"Modules/InnoviveItemQuantityPerBox/Configuration/InnoviveItemQuantityPerBox.json\"\n        ]\n    },\n    \"templates\": {\n        \"application\": {\n            \"shopping\": {\n                \"files\": [\n                    \"Modules/InnoviveItemQuantityPerBox/Templates/devma_innoviveitemquantityperbox_innoviveitemquantityperbox.tpl\",\n                    \"Modules/InnoviveItemQuantityPerBox/Templates/paymentmethod_creditcard_list.tpl\"\n                ]\n            },\n            \"myaccount\": {\n                \"files\": [\n                    \"Modules/InnoviveItemQuantityPerBox/Templates/devma_innoviveitemquantityperbox_innoviveitemquantityperbox.tpl\",\n                    \"Modules/InnoviveItemQuantityPerBox/Templates/paymentmethod_creditcard_list.tpl\"\n                ]\n            },\n            \"checkout\": {\n                \"files\": [\n                    \"Modules/InnoviveItemQuantityPerBox/Templates/devma_innoviveitemquantityperbox_innoviveitemquantityperbox.tpl\",\n                    \"Modules/InnoviveItemQuantityPerBox/Templates/paymentmethod_creditcard_list.tpl\"\n                ]\n            }\n        }\n    },\n    \"sass\": {\n        \"entry_points\": {\n            \"shopping\": \"Modules/InnoviveItemQuantityPerBox/Sass/_innoviveitemquantityperbox-innoviveitemquantityperbox.scss\",\n            \"myaccount\": \"Modules/InnoviveItemQuantityPerBox/Sass/_innoviveitemquantityperbox-innoviveitemquantityperbox.scss\",\n            \"checkout\": \"Modules/InnoviveItemQuantityPerBox/Sass/_innoviveitemquantityperbox-innoviveitemquantityperbox.scss\"\n        },\n        \"files\": [\n            \"Modules/InnoviveItemQuantityPerBox/Sass/_innoviveitemquantityperbox-innoviveitemquantityperbox.scss\"\n        ]\n    },\n    \"javascript\": {\n        \"entry_points\": {\n            \"shopping\": \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\",\n            \"myaccount\": \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\",\n            \"checkout\": \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\"\n        },\n        \"application\": {\n            \"shopping\": {\n                \"files\": [\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/InnoviveItemQuantityPerBox.View.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.Model.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.SS2Model.js\"\n                ]\n            },\n            \"myaccount\": {\n                \"files\": [\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/InnoviveItemQuantityPerBox.View.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.Model.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.SS2Model.js\"\n                ]\n            },\n            \"checkout\": {\n                \"files\": [\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/InnoviveItemQuantityPerBox.View.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.Model.js\",\n                    \"Modules/InnoviveItemQuantityPerBox/JavaScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.SS2Model.js\"\n                ]\n            }\n        }\n    },\n    \"ssp-libraries\": {\n        \"entry_point\": \"Modules/InnoviveItemQuantityPerBox/SuiteScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\",\n        \"files\": [\n            \"Modules/InnoviveItemQuantityPerBox/SuiteScript/Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\",\n            \"Modules/InnoviveItemQuantityPerBox/SuiteScript/InnoviveItemQuantityPerBox.ServiceController.js\"\n        ]\n    },\n    \"suitescript2\": {\n        \"files\": [\n            \"Modules/InnoviveItemQuantityPerBox/SuiteScript2/InnoviveItemQuantityPerBox.Service.ss\"\n        ]\n    }\n}"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\Configuration\\InnoviveItemQuantityPerBox.json","type":"application/json","contents":"{\n    \"type\": \"object\",\n    \"properties\": { \n        \"InnoviveItemQuantityPerBox.config\": {\n            \"group\": \"extensions\",\n            \"subtab\": \"InnoviveItemQuantityPerBox_subtab\",\n            \"type\": \"string\",\n            \"title\": \"InnoviveItemQuantityPerBox_Title\",\n            \"description\": \"Config description example\",\n            \"default\": \"Default config example\"\n        }\n    }\n}"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\JavaScript\\Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js","type":"application/javascript","contents":"\ndefine(\n\t'Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox'\n\t, [\n\t\t'Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.View'\n\t\t, 'ProductDetails.Quantity.View'\n\t\t, 'Product.Model'\n\t\t, 'Cart.Item.Summary.View'\n\t\t, 'QuickAdd.View'\n\t\t, 'Cart.Detailed.View'\n\t\t, 'Transaction.Line.Model'\n\t\t, 'Utils'\n\t\t, 'Cart.AddToCart.Button.View'\n\t\t, 'LiveOrder.Line.Model'\n\t\t, 'Cart.Confirmation.Helpers'\n\t]\n\t, function (\n\t\tInnoviveItemQuantityPerBoxView\n\t\t, ProductDetailsQuantityView\n\t\t, ProductModel\n\t\t, CartItemSummaryView\n\t\t, QuickAddView\n\t\t, CartDetailedView\n\t\t, TransactionLineModel\n\t\t, Utils\n\t\t, AddToCartButtonView\n        , LiveOrderLineModel\n        , CartConfirmationHelpers\n\t) {\n\t\t'use strict';\n\n\t\treturn {\n\t\t\tmountToApp: function mountToApp(container) {\n\t\t\t\t// using the 'Layout' component we add a new child view inside the 'Header' existing view \n\t\t\t\t// (there will be a DOM element with the HTML attribute data-view=\"Header.Logo\")\n\t\t\t\t// more documentation of the Extensibility API in\n\t\t\t\t// https://system.netsuite.com/help/helpcenter/en_US/APIs/SuiteCommerce/Extensibility/Frontend/index.html\n\n\t\t\t\tvar layout = container.getComponent('Layout');\n\t\t\t\tvar cart = container.getComponent(\"Cart\");\n\t\t\t\tvar pdp = container.getComponent(\"PDP\");\n\t\t\t\tCartDetailedView.prototype.events = {\n\t\t\t\t\t'change [data-type=\"cart-item-quantity-input\"]': 'itemsPerBox',\n\t\t\t\t\t'change [data-type=\"cart-item-quantity-input\"]': 'debouncedUpdateItemQuantity',\n\t\t\t\t\t'keypress [data-type=\"cart-item-quantity-input\"]': 'debouncedUpdateItemQuantity',\n\t\t\t\t\t'submit [data-action=\"update-quantity\"]': 'updateItemQuantityFormSubmit',\n\t\t\t\t\t'click [data-action=\"remove-item\"]': 'removeItem',\n\t\t\t\t\t'submit form[data-action=\"estimate-tax-ship\"]': 'estimateTaxShip',\n\t\t\t\t\t'click [data-action=\"remove-shipping-address\"]': 'removeShippingAddress',\n\t\t\t\t\t'click [data-touchpoint=\"checkout\"]': 'trackEvent',\n\t\t\t\t\t'change [data-action=\"estimate-tax-ship-country\"]': 'changeCountry'\n\t\t\t\t}\n\n\t\t\t\tCartDetailedView.prototype.itemsPerBox = function (e) {\n\t\t\t\t\tdebugger;\n\t\t\t\t\tvar element = jQuery('[data-type=\"cart-item-quantity-input\"]');\n\t\t\t\t\tfor (var i = 0; i < this.model.attributes.lines.models.length; i++) {\n\t\t\t\t\t\tvar id = element[i].id;\n\t\t\t\t\t\tvar qty = element[i].value;\n\t\t\t\t\t\tvar item = this.model.attributes.lines.models[i].attributes.internalid;\n\t\t\t\t\t\tvar perBox = this.model.attributes.lines.models[i].attributes.item.attributes.custitem_sales_qty_multiple;\n\t\t\t\t\t\tif (id.indexOf(item) != -1 && qty != '') {\n\t\t\t\t\t\t\tif (perBox) {\n\t\t\t\t\t\t\t\tjQuery('#case-quantity-' + item).val(perBox * parseInt(qty));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery('#case-quantity-' + item).val(parseInt(qty) * 1);\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tCartDetailedView.prototype.debouncedUpdateItemQuantity = _.wrap(CartDetailedView.prototype.debouncedUpdateItemQuantity, function (fn, e) {\n\t\t\t\t\tdebugger;\n\t\t\t\t\tthis.updateItemQuantity(e);\n\t\t\t\t\t\n\t\t\t\t})\n\n\t\t\t\tCartDetailedView.prototype.initPlugins = _.wrap(CartDetailedView.prototype.initPlugins, function (fn, e) {\n\t\t\t\t\tdebugger;\n\t\t\t\t\tself = this\n\t\t\t\t\tif (this.application.Configuration.get('siteSettings.sitetype') === 'ADVANCED') {\n\t\t\t\t\t\tthis.$('[data-action=\"sticky\"]').scStickyButton();\n\t\t\t\t\t\tvar element = jQuery('.modal-modal.fade.modal-ProductDetails.QuickView.View.in');\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tUtils.initBxSlider(\n\t\t\t\t\t\tthis.$('[data-type=\"carousel-items\"]'),\n\t\t\t\t\t\tthis.application.Configuration.get('bxSliderDefaults')\n\t\t\t\t\t);\n\t\t\t\t\tif (allItemsCart && allItemsCart.length) {\n\n\t\t\t\t\t\tfor (var y = 0; y < allItemsCart.length; y++) {\n\t\t\t\t\t\t\tvar element = jQuery('[data-type=\"cart-item-quantity-input\"]');\n\n\t\t\t\t\t\t\tif (element[y]) var itemElement = element[y].id.split('item')[1].split('set')[0];\n\t\t\t\t\t\t\tif (allItemsCart && allItemsCart.length) var itemElementCart = allItemsCart[y].item.split('item')[1].split('set')[0];\n\n\t\t\t\t\t\t\tif (itemElement == itemElementCart) {\n\n\t\t\t\t\t\t\t\tif (allItemsCart[y].qtyBox) {\n\t\t\t\t\t\t\t\t\tif (jQuery('#case-quantity-' + itemElement)) jQuery('#case-quantity-' + itemElement).val(allItemsCart[y].qtyBox * parseInt(element[y].value))\n\t\t\t\t\t\t\t\t\tjQuery('#in-modal-quantity_case' + itemElement).val(allItemsCart[y].qtyBox * parseInt(element[y].value));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (jQuery('#case-quantity-' + itemElement)) jQuery('#case-quantity-' + itemElement).val(parseInt(element[y].value) * 1);\n\t\t\t\t\t\t\t\t\tjQuery('#in-modal-quantity_case' + itemElement).val(allItemsCart[y].qtyBox * parseInt(element[y].value));\n\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tAddToCartButtonView.prototype.addToCart = _.wrap(AddToCartButtonView.prototype.addToCart, function (fn, e) { \n\t\t\t\t\tdebugger\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst self = this;\n\t\t\t\t\tlet cart_promise;\n\t\t\t\t\tvar validate = true;\n\t\t\t\t\tvar itemId = this.model.get('item').id;\n\t\t\t\t\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.model.areAttributesValid(['options', 'quantity'], self.getAddToCartValidators())\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.setOption('custcol_sdb_sca_qty_box',jQuery('.product-details-quantity-value').val())\n\t\t\t\t\tthis.model.setOption('custcol_sdb_sca_original_qty',jQuery('#quantity').val())\n\t\t\t\t\t\n\n\t\t\t\t\tif (!this.model.isNew() && this.model.get('source') === 'cart') {\n\t\t\t\t\t\tcart_promise = this.cart.updateProduct(this.model);\n\t\t\t\t\t\tcart_promise.done(function() {\n\t\t\t\t\t\t\tself.options.application.getLayout().closeModal();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst line = LiveOrderLineModel.createFromProduct(this.model);\n\t\t\t\t\t\tcart_promise = this.cart.addLine(line);\n\t\t\t\t\t\tCartConfirmationHelpers.showCartConfirmation(\n\t\t\t\t\t\t\tcart_promise,\n\t\t\t\t\t\t\tline,\n\t\t\t\t\t\t\tself.options.application\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tcart_promise.fail(function(jqXhr) {\n\t\t\t\t\t\tlet error_details = null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(jqXhr.responseText);\n\t\t\t\t\t\t\terror_details = response.errorDetails;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (error_details && error_details.status === 'LINE_ROLLBACK') {\n\t\t\t\t\t\t\t\tself.model.set('internalid', error_details.newLineId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.disableElementsOnPromise(cart_promise, e.target);\n\t\t\t\t\treturn false;\n\t\t\t\t}) \n\n\t\t\t\tCartDetailedView.prototype.removeItem = _.wrap(CartDetailedView.prototype.removeItem, function (fn, e) {\n\t\t\t\t\t//debugger;\n\t\t\t\t\tconst self = this;\n\t\t\t\t\tconst product = this.model.get('lines').get(this.$(e.target).data('internalid'));\n\t\t\t\t\tconst remove_promise = this.model.removeLine(product);\n\t\t\t\t\tconst internalid = product.get('internalid');\n\n\t\t\t\t\tthis.isRemoving = true;\n\t\t\t\t\tthis.disableElementsOnPromise(\n\t\t\t\t\t\tremove_promise,\n\t\t\t\t\t\t'article[id=\"' + internalid + '\"] a, article[id=\"' + internalid + '\"] button'\n\t\t\t\t\t);\n\n\t\t\t\t\tremove_promise.always(function () {\n\t\t\t\t\t\tself.isRemoving = false;\n\t\t\t\t\t});\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t\treturn remove_promise;\n\t\t\t\t})\n\n\t\t\t\t//Section Cart\n\t\t\t\tQuickAddView.prototype.selectAll = _.wrap(QuickAddView.prototype.selectAll, function (fn, e) {\n\t\t\t\t\t\n\t\t\t\t\tthis.$('[name=\"quantity\"]').select();\n\t\t\t\t\tvar qty = this.$('[name=\"quantity\"]').val();\n\t\t\t\t\tif (this.model.attributes.selectedProduct) {\n\n\t\t\t\t\t\tvar qtyPerBox = this.model.attributes.selectedProduct.attributes.item.attributes.custitem_sales_qty_multiple;\n\t\t\t\t\t\tif (qtyPerBox) {\n\t\t\t\t\t\t\tif (jQuery('#case-quantity')) jQuery('#case-quantity').val(qtyPerBox * parseInt(qty));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (jQuery('#case-quantity')) jQuery('#case-quantity').val(parseInt(qty) * 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t//Section Cart\n\t\t\t\tQuickAddView.prototype.saveForm = _.wrap(QuickAddView.prototype.saveForm, function (fn, e) {\n\t\t\t\t\tdebugger;\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tBackbone.Validation.bind(this);\n\n\t\t\t\t\tthis.model.set(this.$('form').serializeObject());\n\n\t\t\t\t\tconst product = this.model.get('selectedProduct');\n\n\t\t\t\t\tif (this.model.isValid(true) && product) {\n\t\t\t\t\t\tproduct.set('quantity', parseInt(this.model.get('quantity'), 10));\n\n\t\t\t\t\t\tconst selected_line = new TransactionLineModel(product.toJSON());\n\n\t\t\t\t\t\tselected_line.set('internalid', _.uniqueId('item_line'));\n\t\t\t\t\t\tselected_line.set('item', product.getItem().clone());\n\t\t\t\t\t\tselected_line.set('options', product.get('options').clone());\n\n\t\t\t\t\t\t// if the item is a matrix we add the parent so when saving the item in a product list (request a quote case)\n\t\t\t\t\t\t// we have the parent\n\t\t\t\t\t\tif (product.get('item').get('_matrixChilds').length) {\n\t\t\t\t\t\t\tselected_line.get('item').set('_matrixParent', product.get('item'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselected_line.unset('selectedProduct');\n\t\t\t\t\t\tselected_line.unset('quickaddSearch');\n\n\t\t\t\t\t\t// @event {QuickAdd.View.SelectedLine.Properties} selectedLine\n\t\t\t\t\t\tthis.trigger(\n\t\t\t\t\t\t\t'selectedLine',\n\t\t\t\t\t\t\t// @class QuickAdd.View.SelectedLine.Properties\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// @property {Transaction.Line.Model} selectedLine\n\t\t\t\t\t\t\t\tselectedLine: selected_line\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// @class QuickAdd.View\n\n\t\t\t\t\t\tthis.$('[name=\"quantity\"]').val('');\n\t\t\t\t\t\tthis.$('[name=\"quantity\"]').attr({ min: 1 });\n\t\t\t\t\t\tthis.$('[data-type=\"quick-add-reset\"]').hide();\n\t\t\t\t\t\tthis.itemsSearcherComponent.cleanSearch();\n\t\t\t\t\t\tthis.itemsSearcherComponent.setFocus();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t});\n\n\t\t\t\tQuickAddView.prototype.resetHandle = _.wrap(QuickAddView.prototype.resetHandle, function (fn, e) {\n\t\t\t\t\n\t\t\t\t\tthis.$('[data-type=\"quick-add-reset\"]').hide();\n\t\t\t\t\tif (jQuery('#case-quantity')) jQuery('#case-quantity').val('');\n\t\t\t\t\tthis.itemsSearcherComponent.cleanSearch();\n\n\t\t\t\t});\n\n\t\t\t\tvar allItemsCart;\n\t\t\t\tif (cart) {\n\t\t\t\t\tlayout.on('beforeShowContent', function () {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar dataItemCart = [];\n\t\t\t\t\t\tcart.getLines().then(function (lines) {\n\t\t\t\t\t\t\tif (lines.length) {\n\t\t\t\t\t\t\t\tfor (var x = 0; x < lines.length; x++) {\n\t\t\t\t\t\t\t\t\tdataItemCart.push({\n\t\t\t\t\t\t\t\t\t\titem: lines[x].internalid,\n\t\t\t\t\t\t\t\t\t\tqtyBox: lines[x].item.extras.custitem_sales_qty_multiple\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tconsole.log('lines', lines[x].item.extras.custitem_sales_qty_multiple)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tallItemsCart = dataItemCart;\n\t\t\t\t\t\t\t\tconsole.log('lines2', JSON.stringify(allItemsCart))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\n\t\t\t\t\tlayout.on('afterShowContent', function () {\n\t\t\t\t\t\tdebugger;\n\t\t\t\t\t\tif (allItemsCart && allItemsCart.length) {\n\n\t\t\t\t\t\t\tfor (var y = 0; y < allItemsCart.length; y++) {\n\t\t\t\t\t\t\t\tvar element = jQuery('[data-type=\"cart-item-quantity-input\"]');\n\t\n\t\t\t\t\t\t\t\tif (element[y]) var itemElement = element[y].id.split('item')[1].split('set')[0];\n\t\t\t\t\t\t\t\tif (allItemsCart && allItemsCart.length) var itemElementCart = allItemsCart[y].item.split('item')[1].split('set')[0];\n\t\n\t\t\t\t\t\t\t\tif (itemElement == itemElementCart) {\n\t\n\t\t\t\t\t\t\t\t\tif (allItemsCart[y].qtyBox) {\n\t\t\t\t\t\t\t\t\t\tif (jQuery('#case-quantity-' + itemElement)) jQuery('#case-quantity-' + itemElement).val(allItemsCart[y].qtyBox * parseInt(element[y].value))\n\t\t\t\t\t\t\t\t\t\tjQuery('#in-modal-quantity_case' + itemElement).val(allItemsCart[y].qtyBox * parseInt(element[y].value));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (jQuery('#case-quantity-' + itemElement)) jQuery('#case-quantity-' + itemElement).val(parseInt(element[y].value) * 1);\n\t\t\t\t\t\t\t\t\t\tjQuery('#in-modal-quantity_case' + itemElement).val(allItemsCart[y].qtyBox * parseInt(element[y].value));\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t//Set QTY Item page\n\n\t\t\t\tif (pdp) {\n\t\t\t\t//\tdebugger;\n\t\t\t\t\tlayout.on('afterShowContent', function () {\n\t\t\t\t\t\tconsole.log(this)\n\t\t\t\t\t\tvar iteminfo = pdp.getItemInfo();\n\n\t\t\t\t\t\tif (iteminfo) {\n\t\t\t\t\t\t\tvar qtyBox = iteminfo.item.custitem_sales_qty_multiple;\n\t\t\t\t\t\t\tvar itemId=iteminfo.item.internalid;\n\t\t\t\t\t\t\tvar element = jQuery('[name=\"quantity\"]');\n\t\t\t\t\t\t\tif (qtyBox) {\n\t\t\t\t\t\t\t\tjQuery('#quantity_case'+itemId).val(qtyBox * parseInt(element[0].value))\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery('#quantity_case'+itemId).val(parseInt(element[0].value) * 1)\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\n\t\t\t\tProductDetailsQuantityView.prototype.setFocus = _.wrap(ProductDetailsQuantityView.prototype.setFocus, function (fn, e) {\n\t\t\t\t//\tdebugger;\n\t\t\t\t\tthis.$('[name=\"quantity\"]').focus();\n\t\t\t\t\tvar qty = this.$('[name=\"quantity\"]').val();\n\t\t\t\t\tvar qtyPerBox = this.model.attributes.item.attributes.custitem_sales_qty_multiple;\n\t\t\t\t\tvar intId = this.model.attributes.item.id;\n\t\t\t\t\tif (qtyPerBox) {\n\t\t\t\t\t\tjQuery('#quantity_case'+intId).val(qtyPerBox * parseInt(qty));\n\t\t\t\t\t\tjQuery('#in-modal-quantity_case' + intId).val(qtyPerBox * parseInt(qty));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjQuery('#quantity_case'+intId).val(parseInt(qty) * 1);\n\t\t\t\t\t\tjQuery('#in-modal-quantity_case' + intId).val(parseInt(qty) * 1);\n\t\t\t\t\t}\n\n\n\n\t\t\t\t});\n\t\t\t\t// ProductDetailsQuantityView.prototype.initialize= _.wrap(ProductDetailsQuantityView.prototype.initialize, function (fn, e) {\n\t\t\t\tCartItemSummaryView.prototype.addQuantity = _.wrap(ProductDetailsQuantityView.prototype.addQuantity, function (fn, e) {\n\t\t\t\t\tdebugger;\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tconst $element = this.$(e.target);\n\t\t\t\t\tconst quantity_input = $element.parent().find('input');\n\t\t\t\t\tconst old_value = quantity_input.val();\n\t\t\t\t\tconst max_quantity = this.model.get('item').get('_maximumQuantity', true);\n\t\t\t\t\tlet new_val = parseFloat(old_value) + 1;\n\n\t\t\t\t\tnew_val = max_quantity ? Math.min(max_quantity, new_val) : new_val;\n\n\t\t\t\t\tquantity_input.val(new_val);\n\t\t\t\t\tquantity_input.change();\n\n\n\t\t\t\t});\n\n\n\t\t\t\t// });\n\t\t\t\t/** @type {LayoutComponent} */\n\t\t\t\t// var layout = container.getComponent('Layout');\n\n\t\t\t\tif (layout) {\n\t\t\t\t\tlayout.addChildView('Header.Logo', function () {\n\t\t\t\t\t\treturn new InnoviveItemQuantityPerBoxView({ container: container });\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t});\n"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\JavaScript\\Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.Model.js","type":"application/javascript","contents":"// Model.js\n// -----------------------\n// @module Case\ndefine(\"Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.Model\", [\"Backbone\", \"Utils\"], function(\n    Backbone,\n    Utils\n) {\n    \"use strict\";\n\n    // @class Case.Fields.Model @extends Backbone.Model\n    return Backbone.Model.extend({\n\n        \n        //@property {String} urlRoot\n        urlRoot: Utils.getAbsoluteUrl(\n            getExtensionAssetsPath(\n                \"services/InnoviveItemQuantityPerBox.Service.ss\"\n            )\n        )\n        \n});\n});\n"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\JavaScript\\Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.SS2Model.js","type":"application/javascript","contents":"// Model.js\n// -----------------------\n// @module Case\ndefine(\"Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.SS2Model\", [\"Backbone\", \"Utils\"], function(\n    Backbone,\n    Utils\n) {\n    \"use strict\";\n\n    // @class Case.Fields.Model @extends Backbone.Model\n    return Backbone.Model.extend({\n        //@property {String} urlRoot\n        urlRoot: Utils.getAbsoluteUrl(\n            getExtensionAssetsPath(\n                \"Modules/InnoviveItemQuantityPerBox/SuiteScript2/InnoviveItemQuantityPerBox.Service.ss\"\n            ),\n            true\n        )\n});\n});\n"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\JavaScript\\InnoviveItemQuantityPerBox.View.js","type":"application/javascript","contents":"// @module Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox\ndefine('Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.View'\n,\t[\n\t'devma_innoviveitemquantityperbox_innoviveitemquantityperbox.tpl'\n\t\n\t,\t'Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.SS2Model'\n\t\n\t,\t'Backbone'\n\t\n    ]\n, function (\n\tdevma_innoviveitemquantityperbox_innoviveitemquantityperbox_tpl\n\t\n\t,\tInnoviveItemQuantityPerBoxSS2Model\n\t\n\t,\tBackbone\n\t\n)\n{\n    'use strict';\n\n\t// @class Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.View @extends Backbone.View\n\treturn Backbone.View.extend({\n\n\t\ttemplate: devma_innoviveitemquantityperbox_innoviveitemquantityperbox_tpl\n\t\n\n\t,\tinitialize: function (options) {\n\n\t\t\t/*  Uncomment to test backend communication with an example service\n\t\t\t\t(you'll need to deploy and activate the extension first)\n\t\t\t*/\n\n\t\t\t// this.model = new InnoviveItemQuantityPerBoxModel();\n\t\t\t// var self = this;\n         \t// this.model.fetch().done(function(result) {\n\t\t\t// \tself.message = result.message;\n\t\t\t// \tself.render();\n      \t\t// });\n\t\t}\n\n\t,\tevents: {\n\t\t\n\t\t\n\t\t}\n\n\t,\tbindings: {\n\t\t}\n\n\t, \tchildViews: {\n\n\t\t},\n\n\t\t\n\n\t\t//@method getContext @return Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.View.Context\n\t\tgetContext: function getContext()\n    \t{\n\t\t\t//@class Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.View.Context\n\t\t\tthis.message = this.message || 'Hello World!!'\n\t\t\treturn {\n\t\t\t\tmessage: this.message\n\t\t\t};\n\t\t}\n\t});\n});\n"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\Sass\\_innoviveitemquantityperbox-innoviveitemquantityperbox.scss","type":"text/x-scss","contents":"/*\n\tSass Application Entry Point\n\tLink all your sass dependencies in the right order\n\n\tExample:\n\t@import \"other-sass-file.scss\";\n\t@import \"../../<other module>/Sass/other-sass-file.scss\";\n*/ \n\n.innoviveitemquantityperbox-info-card {\n    @extend .info-card;\n}\n\n.innoviveitemquantityperbox-info-card-content {\n    @extend .info-card-content;\n    color: $sc-color-secondary;\n    font-weight: bold;\n}"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\SuiteScript\\Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js","type":"application/javascript","contents":"// Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.js\n// Load all your starter dependencies in backend for your extension here\n// ----------------\n\ndefine('Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox'\n,\t[\n\t\t'Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.ServiceController'\n\t]\n,\tfunction (\n\t\tInnoviveItemQuantityPerBoxServiceController\n\t)\n{\n\t'use strict';\n});"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\SuiteScript\\InnoviveItemQuantityPerBox.ServiceController.js","type":"application/javascript","contents":"define(\"Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.ServiceController\", [\"ServiceController\"], function(\n  ServiceController\n) {\n  \"use strict\";\n\n  return ServiceController.extend({\n    name: \"Devma.InnoviveItemQuantityPerBox.InnoviveItemQuantityPerBox.ServiceController\",\n\n    // The values in this object are the validation needed for the current service.\n    options: {\n      common: {}\n    },\n\n    get: function get() {\n      return JSON.stringify({\n        message: \"Hello World I'm an Extension using a Service!\"\n      });\n    },\n\n    post: function post() {\n      // not implemented\n    },\n\n    put: function put() {\n      // not implemented\n    },\n\n    delete: function() {\n      // not implemented\n    }\n  });\n});\n"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\SuiteScript2\\InnoviveItemQuantityPerBox.Service.ss","type":null,"contents":"/**\n* @NApiVersion 2.x\n* @NModuleScope Public\n*/\ndefine(function () {\n    \"use strict\";\n    return {\n        service: function (ctx) {\n            ctx.response.write(JSON.stringify({message: 'Hello SS2 World!'}));\n        }\n    };\n});\n"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\Templates\\devma_innoviveitemquantityperbox_innoviveitemquantityperbox.tpl","type":"application/vnd.groove-tool-template","contents":"<!--<section class=\"innoviveitemquantityperbox-info-card\">\n    <span class=\"innoviveitemquantityperbox-info-card-content\">\n      {{message}}\n    </span>\n</section>-->\n\n\n<!--\n  Available helpers:\n  {{ getExtensionAssetsPath \"img/image.jpg\"}} - reference assets in your extension\n  \n  {{ getExtensionAssetsPathWithDefault context_var \"img/image.jpg\"}} - use context_var value i.e. configuration variable. If it does not exist, fallback to an asset from the extension assets folder\n  \n  {{ getThemeAssetsPath context_var \"img/image.jpg\"}} - reference assets in the active theme\n  \n  {{ getThemeAssetsPathWithDefault context_var \"img/theme-image.jpg\"}} - use context_var value i.e. configuration variable. If it does not exist, fallback to an asset from the theme assets folder\n-->"},{"path":"\\Devma\\InnoviveItemQuantityPerBox@1.0.0\\Modules\\InnoviveItemQuantityPerBox\\Templates\\paymentmethod_creditcard_list.tpl","type":"application/vnd.groove-tool-template","contents":"<!--<section class=\"innoviveitemquantityperbox-info-card\">\r\n    <span class=\"innoviveitemquantityperbox-info-card-content\">\r\n      {{message}}\r\n    </span>\r\n</section>-->\r\n\r\n\r\n<!--\r\n  Available helpers:\r\n  {{ getExtensionAssetsPath \"img/image.jpg\"}} - reference assets in your extension\r\n  \r\n  {{ getExtensionAssetsPathWithDefault context_var \"img/image.jpg\"}} - use context_var value i.e. configuration variable. If it does not exist, fallback to an asset from the extension assets folder\r\n  \r\n  {{ getThemeAssetsPath context_var \"img/image.jpg\"}} - reference assets in the active theme\r\n  \r\n  {{ getThemeAssetsPathWithDefault context_var \"img/theme-image.jpg\"}} - use context_var value i.e. configuration variable. If it does not exist, fallback to an asset from the theme assets folder\r\n-->"}]}